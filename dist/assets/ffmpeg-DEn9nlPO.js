var T=Object.defineProperty;var y=r=>{throw TypeError(r)};var g=(r,e,t)=>e in r?T(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var f=(r,e,t)=>g(r,typeof e!="symbol"?e+"":e,t),U=(r,e,t)=>e.has(r)||y("Cannot "+t);var n=(r,e,t)=>(U(r,e,"read from private field"),t?t.call(r):e.get(r)),D=(r,e,t)=>e.has(r)?y("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(r):e.set(r,t),_=(r,e,t,s)=>(U(r,e,"write to private field"),s?s.call(r,t):e.set(r,t),t);const C="modulepreload",S=function(r){return"/convertopia-manager/"+r},N={},x=function(e,t,s){let o=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const i=document.querySelector("meta[property=csp-nonce]"),c=(i==null?void 0:i.nonce)||(i==null?void 0:i.getAttribute("nonce"));o=Promise.allSettled(t.map(l=>{if(l=S(l),l in N)return;N[l]=!0;const w=l.endsWith(".css"),p=w?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${l}"]${p}`))return;const d=document.createElement("link");if(d.rel=w?"stylesheet":C,w||(d.as="script"),d.crossOrigin="",d.href=l,c&&d.setAttribute("nonce",c),document.head.appendChild(d),w)return new Promise((I,A)=>{d.addEventListener("load",I),d.addEventListener("error",()=>A(new Error(`Unable to preload CSS for ${l}`)))})}))}function E(i){const c=new Event("vite:preloadError",{cancelable:!0});if(c.payload=i,window.dispatchEvent(c),!c.defaultPrevented)throw i}return o.then(i=>{for(const c of i||[])c.status==="rejected"&&E(c.reason);return e().catch(E)})};var a;(function(r){r.LOAD="LOAD",r.EXEC="EXEC",r.WRITE_FILE="WRITE_FILE",r.READ_FILE="READ_FILE",r.DELETE_FILE="DELETE_FILE",r.RENAME="RENAME",r.CREATE_DIR="CREATE_DIR",r.LIST_DIR="LIST_DIR",r.DELETE_DIR="DELETE_DIR",r.ERROR="ERROR",r.DOWNLOAD="DOWNLOAD",r.PROGRESS="PROGRESS",r.LOG="LOG",r.MOUNT="MOUNT",r.UNMOUNT="UNMOUNT"})(a||(a={}));const k=(()=>{let r=0;return()=>r++})(),P=new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first"),B=new Error("called FFmpeg.terminate()");var u,L,R,O,m,b,h;class q{constructor(){D(this,u,null);D(this,L,{});D(this,R,{});D(this,O,[]);D(this,m,[]);f(this,"loaded",!1);D(this,b,()=>{n(this,u)&&(n(this,u).onmessage=({data:{id:e,type:t,data:s}})=>{switch(t){case a.LOAD:this.loaded=!0,n(this,L)[e](s);break;case a.MOUNT:case a.UNMOUNT:case a.EXEC:case a.WRITE_FILE:case a.READ_FILE:case a.DELETE_FILE:case a.RENAME:case a.CREATE_DIR:case a.LIST_DIR:case a.DELETE_DIR:n(this,L)[e](s);break;case a.LOG:n(this,O).forEach(o=>o(s));break;case a.PROGRESS:n(this,m).forEach(o=>o(s));break;case a.ERROR:n(this,R)[e](s);break}delete n(this,L)[e],delete n(this,R)[e]})});D(this,h,({type:e,data:t},s=[],o)=>n(this,u)?new Promise((E,i)=>{const c=k();n(this,u)&&n(this,u).postMessage({id:c,type:e,data:t},s),n(this,L)[c]=E,n(this,R)[c]=i,o==null||o.addEventListener("abort",()=>{i(new DOMException(`Message # ${c} was aborted`,"AbortError"))},{once:!0})}):Promise.reject(P));f(this,"load",(e={},{signal:t}={})=>(n(this,u)||(_(this,u,new Worker(new URL("/convertopia-manager/assets/worker-DJ3jufjD.js",import.meta.url),{type:"module"})),n(this,b).call(this)),n(this,h).call(this,{type:a.LOAD,data:e},void 0,t)));f(this,"exec",(e,t=-1,{signal:s}={})=>n(this,h).call(this,{type:a.EXEC,data:{args:e,timeout:t}},void 0,s));f(this,"terminate",()=>{const e=Object.keys(n(this,R));for(const t of e)n(this,R)[t](B),delete n(this,R)[t],delete n(this,L)[t];n(this,u)&&(n(this,u).terminate(),_(this,u,null),this.loaded=!1)});f(this,"writeFile",(e,t,{signal:s}={})=>{const o=[];return t instanceof Uint8Array&&o.push(t.buffer),n(this,h).call(this,{type:a.WRITE_FILE,data:{path:e,data:t}},o,s)});f(this,"mount",(e,t,s)=>{const o=[];return n(this,h).call(this,{type:a.MOUNT,data:{fsType:e,options:t,mountPoint:s}},o)});f(this,"unmount",e=>{const t=[];return n(this,h).call(this,{type:a.UNMOUNT,data:{mountPoint:e}},t)});f(this,"readFile",(e,t="binary",{signal:s}={})=>n(this,h).call(this,{type:a.READ_FILE,data:{path:e,encoding:t}},void 0,s));f(this,"deleteFile",(e,{signal:t}={})=>n(this,h).call(this,{type:a.DELETE_FILE,data:{path:e}},void 0,t));f(this,"rename",(e,t,{signal:s}={})=>n(this,h).call(this,{type:a.RENAME,data:{oldPath:e,newPath:t}},void 0,s));f(this,"createDir",(e,{signal:t}={})=>n(this,h).call(this,{type:a.CREATE_DIR,data:{path:e}},void 0,t));f(this,"listDir",(e,{signal:t}={})=>n(this,h).call(this,{type:a.LIST_DIR,data:{path:e}},void 0,t));f(this,"deleteDir",(e,{signal:t}={})=>n(this,h).call(this,{type:a.DELETE_DIR,data:{path:e}},void 0,t))}on(e,t){e==="log"?n(this,O).push(t):e==="progress"&&n(this,m).push(t)}off(e,t){e==="log"?_(this,O,n(this,O).filter(s=>s!==t)):e==="progress"&&_(this,m,n(this,m).filter(s=>s!==t))}}u=new WeakMap,L=new WeakMap,R=new WeakMap,O=new WeakMap,m=new WeakMap,b=new WeakMap,h=new WeakMap;const v=new Error("failed to get response body reader"),W=new Error("failed to complete download"),j="Content-Length",G=r=>new Promise((e,t)=>{const s=new FileReader;s.onload=()=>{const{result:o}=s;o instanceof ArrayBuffer?e(new Uint8Array(o)):e(new Uint8Array)},s.onerror=o=>{var E,i;t(Error(`File could not be read! Code=${((i=(E=o==null?void 0:o.target)==null?void 0:E.error)==null?void 0:i.code)||-1}`))},s.readAsArrayBuffer(r)}),H=async r=>{let e;if(typeof r=="string")/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(r)?e=atob(r.split(",")[1]).split("").map(t=>t.charCodeAt(0)):e=await(await fetch(r)).arrayBuffer();else if(r instanceof URL)e=await(await fetch(r)).arrayBuffer();else if(r instanceof File||r instanceof Blob)e=await G(r);else return new Uint8Array;return new Uint8Array(e)},$=async(r,e)=>{var o;const t=await fetch(r);let s;try{const E=parseInt(t.headers.get(j)||"-1"),i=(o=t.body)==null?void 0:o.getReader();if(!i)throw v;const c=[];let l=0;for(;;){const{done:d,value:I}=await i.read(),A=I?I.length:0;if(d){if(E!=-1&&E!==l)throw W;e&&e({url:r,total:E,received:l,delta:A,done:d});break}c.push(I),l+=A,e&&e({url:r,total:E,received:l,delta:A,done:d})}const w=new Uint8Array(l);let p=0;for(const d of c)w.set(d,p),p+=d.length;s=w.buffer}catch(E){console.log("failed to send download progress event: ",E),s=await t.arrayBuffer()}return s},M=async(r,e,t=!1,s)=>{const o=t?await $(r,s):await(await fetch(r)).arrayBuffer(),E=new Blob([o],{type:e});return URL.createObjectURL(E)};export{q as F,x as _,H as f,M as t};
